---
- name: create groups
  group:
    name: "{{ item }}"
    state: present
  with_items: "{{ users_groups }}"

- name: create user
  user:
    name: "{{ item.key }}"
    password: "{{ item.value.password | default(omit) }}"
    group: "{{ item.value.group | default(omit) }}"
    groups: "{{ item.value.groups | default([]) | join(',') }}"
    update_password: on_create
    shell: /bin/bash
    generate_ssh_key: "{{ item.value.generate_ssh_key | default(omit) }}"
  with_dict: "{{ users }}"
  when: item.value.skip_creation is undefined or item.value.skip_creation

- name: add ssh keys from url
  authorized_key:
    user: "{{ item.key }}"
    key: "{{ item.value.ssh_keys_url }}"
  with_dict: "{{ users }}"
  when: item.value.ssh_keys_url is defined

- name: add ssh keys
  authorized_key:
    user: "{{ item.key }}"
    key: "{{ item.value.ssh_keys | join('\n') }}"
  with_dict: "{{ users }}"
  when: item.value.ssh_keys is defined

- name: ensure .ssh folder exists in home directory
  file:
    path: ~{{ item.key }}/.ssh
    state: directory
    owner: "{{ item.key }}"
    group: "{{ item.value.group | default(omit) }}"
    mode: "0700"
  with_dict: "{{ users }}"
  when: item.value.ssh_key_private is defined or item.value.ssh_key_public is defined

- name: install ssh private key
  copy:
    content: "{{ item.value.ssh_key_private }}"
    dest: ~{{ item.key }}/.ssh/id_rsa
    owner: "{{ item.key }}"
    group: "{{ item.value.group | default(omit) }}"
    mode: "0600"
  with_dict: "{{ users }}"
  when: item.value.ssh_key_private is defined

- name: install ssh public key
  copy:
    content: "{{ item.value.ssh_key_public }}"
    dest: ~{{ item.key }}/.ssh/id_rsa.pub
    owner: "{{ item.key }}"
    group: "{{ item.value.group | default(omit) }}"
    mode: "0600"
  with_dict: "{{ users }}"
  when: item.value.ssh_key_public is defined
